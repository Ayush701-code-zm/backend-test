# name: build-and-deploy

# on:
#   push:
#     branches: [ "main", "develop" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build-and-lint:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 18

#       - name: Install dependencies
#         run: npm ci

#       - name: Lint code
#         run: npm run lint

#       - name: Run tests
#         run: npm test

#       - name: Security audit
#         run: npm audit --audit-level=high

#   deploy:
#     needs: build-and-lint
#     if: github.event_name == 'push'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Add EC2 host to known_hosts
#         run: |
#           mkdir -p ~/.ssh
#           ssh-keyscan -H "$EC2_HOST" >> ~/.ssh/known_hosts
#         env:
#           EC2_HOST: ${{ secrets.EC2_HOST }}

#       - name: Write SSH key
#         run: |
#           echo "${EC2_KEY}" > ec2_key.pem
#           chmod 600 ec2_key.pem
#         env:
#           EC2_KEY: ${{ secrets.EC2_KEY }}

#       - name: Deploy to server
#         env:
#           EC2_HOST: ${{ secrets.EC2_HOST }}
#           EC2_USER: ${{ secrets.EC2_USER }}
#           EC2_APP_DIR: ${{ secrets.EC2_APP_DIR }}
#         run: |
#           ssh -i ec2_key.pem ${EC2_USER}@${EC2_HOST} '
#             set -e
#             APP_DIR="${EC2_APP_DIR:-/home/ubuntu/backend-test}"
            
#             # Clone or update repository
#             if [ ! -d "$APP_DIR/.git" ]; then
#               rm -rf "$APP_DIR"
#               git clone https://github.com/${{ github.repository }}.git "$APP_DIR"
#             fi
            
#             cd "$APP_DIR"
#             git fetch --all
#             git reset --hard origin/${{ github.ref_name }}
            
#             # Install dependencies
#             npm ci --only=production
            
#             # Restart application
#             pm2 restart crud-backend || pm2 start server.js --name crud-backend
#             pm2 save
            
#             # Health check
#             sleep 5
#             curl -f http://localhost:5000/api/health || exit 1
            
#             echo "âœ… Deployment completed successfully"
#           '
